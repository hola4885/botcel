const { SlashCommands } = require("@models");
const { Client, EmbedBuilder, ChannelType } = require("discord.js");
const configs = require('../../../../cnf/config.json');

/**
 * Clase para representar el comando slash de valoraci√≥n.
 * @extends SlashCommands
 */
class Valorar extends SlashCommands {
    constructor(){
        super({
            name: "calificar",
            description: 'Env√≠a una rese√±a para el bot.',
            options: [
                {
                    type: 3, // STRING type
                    name: 'rese√±a',
                    description: 'Escribe tu rese√±a',
                    required: true,
                },
                {
                    type: 3, // STRING type
                    name: 'estrellas',
                    description: '¬øCu√°ntas estrellas le das?',
                    required: true,
                    choices: [
                        { name: '‚≠ê', value: '‚≠ê‚†Ä‚†Ä‚†Ä‚†Ä' },
                        { name: '‚≠ê‚≠ê', value: '‚≠ê‚≠ê‚†Ä‚†Ä‚†Ä' },
                        { name: '‚≠ê‚≠ê‚≠ê', value: '‚≠ê‚≠ê‚≠ê‚†Ä‚†Ä' },
                        { name: '‚≠ê‚≠ê‚≠ê‚≠ê', value: '‚≠ê‚≠ê‚≠ê‚≠ê‚†Ä' },
                        { name: '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê', value: '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê' },
                    ],
                }
            ]
        });
    }

  /**
     * Ejecuta la l√≥gica asociada al comando slash.
     * @param {Client} client - El cliente Discord.js.
     * @param {CommandInteraction<CacheType>} int - La interacci√≥n del comando slash.
     */
  async run(client, int) {
        try {
            const rese√±a = int.options.getString('rese√±a');
            const estrellas = int.options.getString('estrellas');

            const embed = new EmbedBuilder()
            .setTitle("‚ú® | Valoraci√≥n Recibida")
            .setDescription(`**¬°Gracias por tu valoraci√≥n!**\n\n**Rese√±a:**\n${rese√±a}`)
            .addFields(
                { name: "‚≠ê Calificaci√≥n", value: `${estrellas}`, inline: true },
                { name: "üîó Usuario", value: `<@${int.user.id}>`, inline: true }
            )
            .setColor("#FFD700")
            .setThumbnail(int.user.displayAvatarURL({ dynamic: true }))
            .setImage('https://cdn.discordapp.com/attachments/1126553811788501133/1277147747602010153/4bfbff9c-bdd9-4ca5-90a5-72c5116e4ac2.png?ex=66cf67c7&is=66ce1647&hm=9308ffeed2a794f4283e0d68283b04918813a45d8150cc45897c78f4bbfc2063&=&format=webp&quality=lossless&width=1020&height=232')  // Agregar imagen

            .setFooter({ text: `Rese√±a enviada por ${int.user.tag}`, iconURL: int.user.displayAvatarURL({ dynamic: true }) })
            .setTimestamp();

            // Canal donde se enviar√° la rese√±a
            const channel = client.channels.cache.get('1277806521173934141');
            if (channel && channel.type === ChannelType.GuildText) {
                await channel.send({ embeds: [embed], fetchReply: true });
            } else {
                return int.reply({ content: 'No se pudo encontrar el canal de rese√±as.', ephemeral: true });
            }

            int.reply({ content: "‚úÖ Tu rese√±a fue enviada correctamente.", ephemeral: true });
        } catch (error) {
            console.error("Error enviando la rese√±a:", error);
            int.reply({ content: "Ocurri√≥ un error al enviar tu rese√±a. Por favor intenta nuevamente.", ephemeral: true });
        }
    }
}

module.exports = Valorar;
